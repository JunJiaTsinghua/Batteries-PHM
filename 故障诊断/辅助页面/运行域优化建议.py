
import time
# 需要SOH的结果、RUL的结果、运行时间的范围
class VAR:
    SOH=[1,0.98,0.97,0.96,0.95,0.94,0.93,0.92,0.91,0.90]
    RUL=2200
    time_range=["2017-5-10 23:40:00","2019-10-13 23:40:00"]

def main():
    suggest=''
    if VAR.SOH[-1]<0.8:
    # 如果当前SOH低于80%了

        suggest="当前健康度较差，电池系统已进入老化后期，谨防容量跳水，时刻关注是否因老化严重导致电池包故障、漏泄，引发安全事故；\n" \
           "继续使用请严格约束运行域，建议控制SOC在20%到80%之间；运行倍率低于1C；控制电池包温度在30°C上下10°C"

    # 如果当前SOH高于80%，且剩余寿命小于1000圈
    if VAR.SOH[-1]>=0.8 and VAR.RUL<1000:
        suggest="当前健康度良好，但电池系统整体寿命不足1000圈，可能在1年之后进入老化后期，需加强关注；\n" \
           "使用时尽量避免到达上下截止电压，建议控制SOC在10%到90%之间；运行倍率低于1.5C；控制电池包温度在20℃到40℃之间"

    days=time.mktime(time.strptime(VAR.time_range[1], "%Y-%m-%d %H:%M:%S"))-time.mktime(time.strptime(VAR.time_range[0], "%Y-%m-%d %H:%M:%S"))
    aging_ratio=(VAR.SOH[0]-VAR.SOH[-1])/(days/86400/365)


    # 如果当前SOH高于80%，且剩余寿命大于1000圈，但年衰减率大于3%
    if VAR.SOH[-1]>=0.8 and VAR.RUL>=1000 and aging_ratio>0.03:
        suggest="当前健康度良好，电池可用寿命充足，但老化速率偏快，可能会提前进入老化后期，需加强关注；\n" \
           "建议DOD范围不超过90%，运行倍率不高于1.5C，控制环境温度在推荐适宜区间运行；"

    # 如果当前SOH高于80%，且剩余寿命大于1000圈，且年衰减率小于3%
    if VAR.SOH[-1] >= 0.8 and VAR.RUL >= 1000 and aging_ratio < 0.03:
        suggest="当前健康度良好，电池可用寿命充足，老化速率正常，在使用时避免电滥用可有效延长使用寿命\n" \
           "建议DOD范围不超过95%，运行倍率不高于2C，控制环境温度在推荐适宜区间运行；"

    # 如果当前SOH高于90%且老化速度正常
    if VAR.SOH[-1] >= 0.9 and aging_ratio < 0.03:
        suggest="当前健康度良好，电池可用寿命充足，老化速率正常，在使用时避免电滥用可有效延长使用寿命\n" \
           "请按照产品规格书推荐的截止电压使用，控制环境温度在推荐适宜区间运行；"

    # 如果当前SOH高于90%但老化速率超过预期
    if VAR.SOH[-1] >= 0.9 and aging_ratio >= 0.03:
        suggest="当前健康度良好，电池可用寿命充足，但老化速率快于预期，应当适当调整运行域\n" \
           "请按照产品规格书推荐的截止电压使用，控制环境温度在推荐适宜区间运行，建议DOD不超过95%，运行倍率不高于2.5C；"

    return suggest